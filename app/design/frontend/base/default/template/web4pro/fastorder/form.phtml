<?php
/**
 * WEB4PRO - Creating profitable online stores
 *
 *
 * @author    WEB4PRO <amutylo@web4pro.com.ua>
 * @category  WEB4PRO
 * @package   Web4pro_Fastorder
 * @copyright Copyright (c) 2014 WEB4PRO (http://www.web4pro.net)
 * @license   http://www.web4pro.net/license.txt
 */
?>
<?php
$helper = Mage::helper('web4pro_fastorder');
$action = $this->getAction()->getFullActionName();
$description = $helper->getFastOrderDescription();
$showEmailField = $helper->showEmailField();
$onlyCurrent = $helper->getOnlyCurrent();
$currentProduct = Mage::registry('current_product');
if($currentProduct){
    $currProductId = $currentProduct->getId();
}
?>

<div id="fastorder-form-wrapper" class="<?php echo $this->getAction()->getFullActionName()?>">
    <?php /*<div class="fastorder-title" ><?php echo $this->__('Fast Order')?></div>*/?>
    <div class="descr" rel="description set from admin">
        <?php if($description) :?>
            <?php echo $description; ?>

        <?php endif ;?>
    </div>
    <form id="fastorder-form" action="<?php echo $this->getUrl('fastorder/index/saveOrder')?>" method="post">
        <div class="fastorder-fields">
            <?php if($currentProduct) :?>
                <input type="hidden" name="product" id="product-id" class="fastorder-productid" value="<?php echo $currProductId;?>"/>
            <?php endif ;?>
            <?php  //echo $this->getPhoneCodeHtml('country', 'validate-select fastorder-country', true, $helper->__('Code'))?>
            <input type="tel" id="telephone" name="phone" class="required-entry fast-field fastorder-phone" `title="Телефон" placeholder="<?php echo $this->__('+38 (0__) ___-__-__')?>"/>
            <?php if(!$showEmailField): ?>
                <input type="text" name="email" class="required-entry fast-field validate-email fastorder-email"  placeholder="<?php echo $this->__('email')?>"/>
            <?php endif; ?>
            <?php if($onlyCurrent && $currentProduct): ?>
                <p style="display:none"><input type="checkbox" name="onlycurrent" id="only-current" class="fast-field fastorder-onlycurrent" value = "1" checked/><span class="mess-text"><?php echo $this->__('only with current product');?></span></p>
            <?php endif; ?>
            <div class="comment-wrapper" id="fastorder-comment-wrapper" style="display: none;">
                <span class="comment"><?php echo $helper->__('Comment:')?></span>
                <textarea name="comment" class="fast-field"></textarea>
            </div>
        </div>
        <div class="button-wrapper" id="fastorder-buttons-container">
            <div class="comment-toggle" title="<?php echo $this->__('Add comment')?>">&nbsp;</div>
            <button type="button" class="button <?php echo $action=='checkout_cart_index' ? 'btn-proceed-checkout btn-checkout' : ''?>" name="submitFastOrder" onclick="fastOrder.saveOrder();"/>
            <span><span><?php echo $this->__('купить в 1 клик')?></span></span>
            </button>
        </div>
        <span class="please-wait" id="fastorder-please-wait" style="display:none;">
            <img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" alt="<?php echo $helper->__('Submit Order...') ?>" title="<?php echo $helper->__('Submit Order...') ?>" class="v-middle" /> <?php echo $helper->__('Submit Order...') ?>
        </span>
	    <div class="invalid-message">
		    <span><?= $this->__('Invalid phone'); ?></span>
	    </div>
    </form>

</div>
<script type="text/javascript">

    var fastOrder = {
        formInstance:new VarienForm('fastorder-form'),

        _processResponse:function (response) {
            if (response.error) {
                Element.hide('fastorder-please-wait');
                Element.show('fastorder-buttons-container');
                $('fastorder-buttons-container').descendants().each(function(s) {
                    s.disabled = false;
                });
                alert(response.error);
                return false;
            }
            if (response.success) {
                if (response.message) {
                    alert(response.message)
                }
                if (response.redirect) {
                    window.location.href = response.redirect;
                }
            }
            return true;
        },
        _afterSaveOrder:function (transport) {
            var response = {};
            try {
                response = transport.responseText.evalJSON();
            } catch (e) {
                response = transport.responseText;
            }
            if (this._processResponse(response)) {

            }
        },
        saveOrder:function () {
          if (this.formInstance.validator && this.formInstance.validator.validate()) {
            var phoneInteger = jQuery('#telephone').val().replace(/[^0-9]/g,"").length;
            if (phoneInteger == 12) {
              jQuery('.invalid-message').css({'display': 'none'});

              var productParams = '';
              if ($('product-id')) {
                var product = $('product-id').value;
                var form = $('product_addtocart_form');
                var qty, onlyCurrent, comment;
                if ($('qty')) {
                  qty = $('qty').value;
                }

                if ($$('#fastorder-comment-wrapper textarea').value != '') {
                  comment = $$('#fastorder-comment-wrapper textarea').value;
                } else {
                  comment = "fast order";
                }
                var form_key = form[0].value;
                var productAjax = {
                  form_key: form_key

                };
                if (qty && qty > 0) {
                  productAjax.qty = qty;
                }
                var options = {};
                var super_attributes = {};
                var superparams = {};
                var prodOptions = $$('#product-options-wrapper .super-attribute-select');
                var virtProdOptions = $$('#product-options-wrapper .super-attribute-select');
                var customOptions = $$('#product-options-wrapper .product-custom-option');
                var supergroup = $$('#super-product-table input');

                var bundleOptions = $$('#product-options-wrapper select, #product-options-wrapper input, #product-options-wrapper textarea');
                var bundleparams = [];
                //process bundle options
                if (bundleOptions) {
                  var bund = {};
                  for (var i = 0; i < bundleOptions.length; i++) {
                    var bundleName = bundleOptions[i].readAttribute('name');
                    var bundleTag = bundleOptions[i].tagName;
                    var bundleType = bundleOptions[i].readAttribute('type');
                    var bundleValue = '';
                    if ('INPUT' == bundleTag || 'TEXTAREA' == bundleTag) {
                      //type is input
                      if ('radio' == bundleType && bundleOptions[i].checked) {
                        //input radio checked
                        bundleValue = bundleOptions[i].value;
                      } else if ('checkbox' == bundleType && bundleOptions[i].checked) {
                        bundleValue = bundleOptions[i].value;
                      }
                      if ('text' == bundleType || 'hidden' == bundleType) {
                        //normal input
                        bundleValue = bundleOptions[i].value;
                      }
                    } else if ('SELECT' == bundleTag) {

                      for (var j = 0; j < bundleOptions[i].length; j++) {
                        if (bundleOptions[i][j].selected == true) {
                          if (bundleValue && !bundleValue.empty()) {
                            bundleValue = bundleValue + "," + bundleOptions[i][j].value;
                          } else {
                            bundleValue = bundleOptions[i][j].value;
                          }

                        }
                      }

                    } else {
                      continue;
                    }

                    if (!bundleName.empty() && !bundleValue.empty()) {
                      bund[bundleName] = bundleValue;
                      bundleparams.push(bund);
                    }
                    bund = {};
                  }
                }

                //process product superoptions
                var optName, optValue;
                if (prodOptions) {
                  for (var i = 0; i < prodOptions.length; i++) {
                    optValue = '';
                    optName = prodOptions[i].readAttribute('name');
                    for (var j = 0; j < prodOptions[i].length; j++) {
                      optValue = '';
                      if (prodOptions[i][j].selected == true) {
                        optValue = prodOptions[i][j].value;
                      }
                    }
                    if (!optName.empty() && !optValue.empty()) {
                      superparams[optName] = optValue;
                    }
                  }
                }


                //process custom options
                var custName = '';
                var custType = '';
                var custValue = '';
                var custparams = {};
                if (customOptions) {
                  for (var i = 0; i < customOptions.length; i++) {
                    custName = customOptions[i].readAttribute('name');
                    custType = customOptions[i].tagName;
                    custValue = '';
                    if ('INPUT' == custType || 'TEXTAREA' == custType) {
                      //type is input
                      custValue = customOptions[i].value;
                    }

                    if ('SELECT' == custType) {
                      //type is select
                      for (var j = 0; j < customOptions[i].length; j++) {
                        custValue = '';
                        if (customOptions[i][j].selected == true) {
                          custValue = customOptions[i][j].value;
                        }
                      }
                    }
                    if (!custName.empty() && !custValue.empty()) {
                      custparams[custName] = custValue;
                    }
                  }
                }

                //process product supergroups
                var supergroupOptions = {};
                for (var i = 0; i < supergroup.length; i++) {
                  superName = supergroup[i].readAttribute('name');
                  var tag
                  var index = superName.indexOf('super_group');
                  if (index != -1) {
                    superValue = supergroup[i].value;
                    supergroupOptions[superName] = superValue;
                  }
                }


                var productAjaxStr = Object.toQueryString(productAjax);
                var allData = '';
                allData = allData + productAjaxStr;

                var bundleparamsStr = '';
                var bundStr = '';
                var bundleObj = {};
                if (bundleparams) {
                  for (var i = 0, si = bundleparams.length; i < si; i++) {
                    var obj = bundleparams[i];
                    var curObj = {};
                    for (var prop in obj) {
                      curObj[prop] = obj[prop];
                      curObjStr = Object.toQueryString(curObj);
                      allData = allData + '&' + curObjStr;
                    }

                  }
                }

                var supergroupparamsStr = '';
                if (supergroupOptions) {
                  supergroupparamsStr = Object.toQueryString(supergroupOptions);
                  allData = allData + '&' + supergroupparamsStr;
                }

                var superParamsSrt = '';
                if (superparams) {
                  superParamsSrt = Object.toQueryString(superparams);
                  allData = allData + '&' + superParamsSrt;
                }
                var custParamsSrt = '';
                if (custparams) {
                  custParamsSrt = Object.toQueryString(custparams);
                  allData = allData + '&' + custParamsSrt;
                }
              }

              Element.show('fastorder-please-wait');
              Element.hide('fastorder-buttons-container');
              $('fastorder-buttons-container').descendants().each(function (s) {
                s.disabled = true;
              });
              var formString = this.formInstance.form.serialize();
              if ('' != allData) {
                params = formString + '&' + allData;
              } else {
                params = formString;
              }

              new Ajax.Request(this.formInstance.form.getAttribute('action'), {
                method: 'post',
                parameters: params,
                onComplete: this._afterSaveOrder.bind(this),
                onFailure: function () {
                  location.href = BASE_URL;
                }
              });
            } else {
				jQuery('.invalid-message').css({'display': 'block'})
            }
          } else {
            jQuery('.invalid-message').css({
              'display': 'block'
            })
          }
        },
        toggleCommentBlock:function (event) {
            Element.toggle('fastorder-comment-wrapper');
        }

    };

    $$("#fastorder-form-wrapper .comment-toggle").invoke('observe', 'click', function () {
        fastOrder.toggleCommentBlock(this)
    });


</script>